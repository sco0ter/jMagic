/*
 * MIT License
 *
 * Copyright (c) 2022 Christian Schudt
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package mtgjson

import java.beans.ConstructorProperties

/**
 * The Identifiers data model describes a list of identifiers associated to a card.
 *
 * This class is immutable.
 */
class Identifiers @ConstructorProperties(
    "cardKingdomFoilId",
    "cardKingdomId",
    "mcmId",
    "mcmMetaId",
    "mtgArenaId",
    "mtgoFoilId",
    "mtgoId",
    "mtgjsonV4Id",
    "multiverseId",
    "scryfallId",
    "scryfallOracleId",
    "scryfallIllustrationId",
    "tcgplayerProductId"
) constructor(

    /**
     * Gets the [Card Kingdom](https://www.cardkingdom.com) card foil identifier.
     *
     * @return The [Card Kingdom](https://www.cardkingdom.com) card foil identifier.
     */
    val cardKingdomFoilId: String?,

    /**
     * Gets the [Card Kingdom](https://www.cardkingdom.com) card identifier.
     *
     * @return The [Card Kingdom](https://www.cardkingdom.com) card identifier.
     */
    val cardKingdomId: String?,

    /**
     * Gets the [Card Market](https://www.cardmarket.com/en/Magic) card identifier.
     *
     * @return The [Card Market](https://www.cardmarket.com/en/Magic) card identifier.
     */
    val mcmId: String?,

    /**
     * Gets the [Card Market](https://www.cardmarket.com/en/Magic) card meta identifier.
     *
     * @return The [Card Market](https://www.cardmarket.com/en/Magic) card meta identifier.
     */
    val mcmMetaId: String?,

    /**
     * The [Magic: The Gathering Arena](https://magic.wizards.com/en/mtgarena) card identifier.
     *
     * @return The [Magic: The Gathering Arena](https://magic.wizards.com/en/mtgarena) card identifier.
     */
    val mtgArenaId: String?,

    /**
     * Gets the [Magic: The Gathering Online](https://magic.wizards.com/en/mtgo) card foil identifier.
     *
     * @return The The [Magic: The Gathering Online](https://magic.wizards.com/en/mtgo) card foil identifier.
     */
    val mtgoFoilId: String?,

    /**
     * Gets the [Magic: The Gathering Online](https://magic.wizards.com/en/mtgo) card identifier.
     *
     * @return The [Magic: The Gathering Online](https://magic.wizards.com/en/mtgo) card identifier.
     */
    val mtgoId: String?,

    /**
     * Gets the universal unique identifier generated by MTGJSON. Each entry is unique. Entries are for MTGJSON v4 uuid
     * generation.
     *
     * @return The universal unique identifier generated by MTGJSON. Each entry is unique. Entries are for MTGJSON v4
     * uuid generation.
     */
    val mtgjsonV4Id: String?,

    /**
     * Gets the [Wizards of the Coast](https://company.wizards.com/) card identifier used in conjunction
     * with
     * [Gatherer](https://gatherer.wizards.com/).
     *
     * @return The [Wizards of the Coast](https://company.wizards.com/) card identifier used in conjunction
     * with [Gatherer](https://gatherer.wizards.com/).
     */
    val multiverseId: String?,

    /**
     * Gets the universal unique identifier generated by [Scryfall](https://scryfall.com/). Note that cards
     * with multiple faces are not unique.
     *
     * @return The universal unique identifier generated by [Scryfall](https://scryfall.com/). Note that
     * cards with multiple faces are not unique.
     */
    val scryfallId: String?,

    /**
     * Gets the unique identifier generated by [Scryfall](https://scryfall.com/) for this card's oracle
     * identity. This value is consistent across reprinted card editions, and unique among different cards with the same
     * name (tokens, Unstable variants, etc).
     *
     * @return The unique identifier generated by [Scryfall](https://scryfall.com/) for this card's oracle
     * identity.
     */
    val scryfallOracleId: String?,

    /**
     * Gets the unique identifier generated by [Scryfall](https://scryfall.com/) for the card artwork that
     * remains consistent across reprints. Newly spoiled cards may not have this field yet.
     *
     * @return The unique identifier generated by [Scryfall](https://scryfall.com/) for the card artwork that
     * remains consistent across reprints.
     */
    val scryfallIllustrationId: String?,

    /**
     * Gets the [TCGplayer](https://www.tcgplayer.com) card identifier.
     *
     * @return The [TCGplayer](https://www.tcgplayer.com) card identifier.
     */
    val tcgplayerProductId: String?
)